// Generated by CoffeeScript 1.3.3
(function() {
  var City, addCities, cities, map, mapCb;

  map = L.map('map').setView([51.505, -0.09], 5);

  L.tileLayer('https://{s}.tiles.mapbox.com/v4/simlmx.3899a192/{z}/{x}/{y}.png?access_token=pk.eyJ1Ijoic2ltbG14IiwiYSI6IjhiOGM5MTQwNzcwYjI2N2I2OWZmZDJmZDEzZmM1MjRmIn0.9gqLDwhf2tDseRNXlFTGRg').addTo(map);

  City = (function() {

    function City(name, coords, meteo) {
      this.name = name;
      this.coords = coords;
      this.meteo = meteo;
    }

    City.prototype.getData = function(code, month) {
      return this.meteo[code][month];
    };

    City.prototype.addToMap = function(month, map) {
      var html, icon;
      html = "" + (this.getData('avgLow', month)) + " -                " + (this.getData('avgHigh', month));
      icon = L.divIcon({
        className: 'citydata',
        html: html,
        iconSize: null
      });
      this.marker = L.marker(this.coords, {
        title: this.name,
        icon: icon
      });
      return this.marker.addTo(map);
    };

    City.prototype.removeFromMap = function(map) {
      return map.removeLayer(this.marker);
    };

    return City;

  })();

  console.log('patate');

  cities = [];

  addCities = function(data) {
    var city, coords, infos, monthly_stats, name, _results;
    while (cities.length > 0) {
      city = cities.pop();
      city.removeFromMap(map);
    }
    _results = [];
    for (name in data) {
      infos = data[name];
      coords = [infos.lat, infos.long];
      monthly_stats = infos.month_stats;
      city = new City(name, coords, monthly_stats);
      cities.push(city);
      _results.push(city.addToMap(0, map));
    }
    return _results;
  };

  mapCb = function(e) {
    var bounds, coords;
    console.log('patate');
    bounds = map.getBounds();
    coords = {
      n: bounds.getNorth(),
      s: bounds.getSouth(),
      e: bounds.getEast(),
      w: bounds.getWest()
    };
    return $.get('data', coords, addCities, 'json');
  };

  map.on('moveend', mapCb);

  mapCb({});

}).call(this);
